{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const APIContext=/*#__PURE__*/createContext(null);export const APIContextProvider=props=>{const[data,setData]=useState([]);// const [newData, setNewData] = useState([]);\nconst fectData=()=>{return fetch(\"https://dummyjson.com/products\").then(res=>res.json()).then(data=>{data.products.forEach(item=>{// Generate slug from the title\nconst slug=item.title.toLowerCase()// Convert to lowercase\n.replace(/\\s+/g,\"_\")// Replace spaces with underscores\n.replace(/[^\\w_]/g,\"\");// Remove non-word characters except underscores\n// Add the new key-value pair\nitem.slug=slug;});setData(data.products);}).catch(err=>console.log(err));};useEffect(()=>{fectData();},[]);const contextAPI={data};return/*#__PURE__*/_jsx(APIContext.Provider,{value:contextAPI,children:props.children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","APIContext","APIContextProvider","props","data","setData","fectData","fetch","then","res","json","products","forEach","item","slug","title","toLowerCase","replace","catch","err","console","log","contextAPI","Provider","value","children"],"sources":["/Users/ishaqbello/Documents/coding/random-shop/src/context/api-context.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nexport const APIContext = createContext(null);\n\nexport const APIContextProvider = (props) => {\n  const [data, setData] = useState([]);\n  // const [newData, setNewData] = useState([]);\n\n  const fectData = () => {\n    return fetch(\"https://dummyjson.com/products\")\n      .then((res) => res.json())\n      .then((data) => {\n        data.products.forEach((item) => {\n          // Generate slug from the title\n          const slug = item.title\n            .toLowerCase() // Convert to lowercase\n            .replace(/\\s+/g, \"_\") // Replace spaces with underscores\n            .replace(/[^\\w_]/g, \"\"); // Remove non-word characters except underscores\n\n          // Add the new key-value pair\n          item.slug = slug;\n        });\n        setData(data.products);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fectData();\n  }, []);\n\n  const contextAPI = { data };\n\n  return (\n    <APIContext.Provider value={contextAPI}>\n      {props.children}\n    </APIContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,MAAO,MAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,IAAI,CAAC,CAE7C,MAAO,MAAM,CAAAO,kBAAkB,CAAIC,KAAK,EAAK,CAC3C,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACpC;AAEA,KAAM,CAAAS,QAAQ,CAAGA,CAAA,GAAM,CACrB,MAAO,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEJ,IAAI,EAAK,CACdA,IAAI,CAACO,QAAQ,CAACC,OAAO,CAAEC,IAAI,EAAK,CAC9B;AACA,KAAM,CAAAC,IAAI,CAAGD,IAAI,CAACE,KAAK,CACpBC,WAAW,CAAC,CAAE;AAAA,CACdC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE;AAAA,CACrBA,OAAO,CAAC,SAAS,CAAE,EAAE,CAAC,CAAE;AAE3B;AACAJ,IAAI,CAACC,IAAI,CAAGA,IAAI,CAClB,CAAC,CAAC,CACFT,OAAO,CAACD,IAAI,CAACO,QAAQ,CAAC,CACxB,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CACrC,CAAC,CAEDrB,SAAS,CAAC,IAAM,CACdQ,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAgB,UAAU,CAAG,CAAElB,IAAK,CAAC,CAE3B,mBACEJ,IAAA,CAACC,UAAU,CAACsB,QAAQ,EAACC,KAAK,CAAEF,UAAW,CAAAG,QAAA,CACpCtB,KAAK,CAACsB,QAAQ,CACI,CAAC,CAE1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}