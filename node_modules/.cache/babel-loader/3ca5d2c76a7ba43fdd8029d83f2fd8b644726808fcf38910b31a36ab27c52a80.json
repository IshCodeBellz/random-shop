{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const BasketContext=/*#__PURE__*/createContext(null);export const BasketContextProvider=props=>{const[basketItems,setBasketItems]=useState(localStorage.getItem(\"basketItems\")?JSON.parse(localStorage.getItem(\"basketItems\")):[]);const addToBasket=item=>{const isItemInBasket=basketItems.find(basketItems=>basketItems.id===item.id);// check if the item is already in the cart\nif(isItemInBasket){setBasketItems(basketItems.map((basketItems// if the item is already in the cart, increase the quantity of the item\n)=>basketItems.id===item.id?{...basketItems,quantity:basketItems.quantity+1}:basketItems// otherwise, return the cart item\n));}else{setBasketItems([...basketItems,{...item,quantity:1}]);// if the item is not in the cart, add the item to the cart\n}};const removeFromBasket=item=>{const isItemInBasket=basketItems.find(basketItems=>basketItems.id===item.id);if(isItemInBasket.quantity===1){setBasketItems(basketItems.filter(basketItems=>basketItems.id!==item.id));// if the quantity of the item is 1, remove the item from the cart\n}else{setBasketItems(basketItems.map(basketItems=>basketItems.id===item.id?{...basketItems,quantity:basketItems.quantity-1}// if the quantity of the item is greater than 1, decrease the quantity of the item\n:basketItems));}};const clearBasket=()=>{setBasketItems([]);// set the cart items to an empty array\n};const getBasketTotal=()=>{return basketItems.reduce((total,item)=>total+item.price*item.quantity,0);// calculate the total price of the items in the cart\n};const numberOfItemsInBasket=()=>{return basketItems.reduce((total,items)=>total+items.quantity,0);};useEffect(()=>{localStorage.setItem(\"basketItems\",JSON.stringify(basketItems));},[basketItems]);useEffect(()=>{const basketItems=localStorage.getItem(\"basketItems\");if(basketItems){setBasketItems(JSON.parse(basketItems));}},[]);const contextValue={basketItems,addToBasket,removeFromBasket,clearBasket,getBasketTotal,numberOfItemsInBasket};return/*#__PURE__*/_jsx(BasketContext.Provider,{value:contextValue,children:props.children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","BasketContext","BasketContextProvider","props","basketItems","setBasketItems","localStorage","getItem","JSON","parse","addToBasket","item","isItemInBasket","find","id","map","quantity","removeFromBasket","filter","clearBasket","getBasketTotal","reduce","total","price","numberOfItemsInBasket","items","setItem","stringify","contextValue","Provider","value","children"],"sources":["/Users/ishaqbello/Documents/coding/random-shop/src/context/basket-context.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const BasketContext = createContext(null);\n\nexport const BasketContextProvider = (props) => {\n  const [basketItems, setBasketItems] = useState(\n    localStorage.getItem(\"basketItems\")\n      ? JSON.parse(localStorage.getItem(\"basketItems\"))\n      : []\n  );\n\n  const addToBasket = (item) => {\n    const isItemInBasket = basketItems.find(\n      (basketItems) => basketItems.id === item.id\n    ); // check if the item is already in the cart\n\n    if (isItemInBasket) {\n      setBasketItems(\n        basketItems.map(\n          (\n            basketItems // if the item is already in the cart, increase the quantity of the item\n          ) =>\n            basketItems.id === item.id\n              ? { ...basketItems, quantity: basketItems.quantity + 1 }\n              : basketItems // otherwise, return the cart item\n        )\n      );\n    } else {\n      setBasketItems([...basketItems, { ...item, quantity: 1 }]); // if the item is not in the cart, add the item to the cart\n    }\n  };\n\n  const removeFromBasket = (item) => {\n    const isItemInBasket = basketItems.find(\n      (basketItems) => basketItems.id === item.id\n    );\n\n    if (isItemInBasket.quantity === 1) {\n      setBasketItems(\n        basketItems.filter((basketItems) => basketItems.id !== item.id)\n      ); // if the quantity of the item is 1, remove the item from the cart\n    } else {\n      setBasketItems(\n        basketItems.map((basketItems) =>\n          basketItems.id === item.id\n            ? { ...basketItems, quantity: basketItems.quantity - 1 } // if the quantity of the item is greater than 1, decrease the quantity of the item\n            : basketItems\n        )\n      );\n    }\n  };\n\n  const clearBasket = () => {\n    setBasketItems([]); // set the cart items to an empty array\n  };\n\n  const getBasketTotal = () => {\n    return basketItems.reduce(\n      (total, item) => total + item.price * item.quantity,\n      0\n    ); // calculate the total price of the items in the cart\n  };\n\n  const numberOfItemsInBasket = () => {\n    return basketItems.reduce((total, items) => total + items.quantity, 0);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"basketItems\", JSON.stringify(basketItems));\n  }, [basketItems]);\n\n  useEffect(() => {\n    const basketItems = localStorage.getItem(\"basketItems\");\n    if (basketItems) {\n      setBasketItems(JSON.parse(basketItems));\n    }\n  }, []);\n\n  const contextValue = {\n    basketItems,\n    addToBasket,\n    removeFromBasket,\n    clearBasket,\n    getBasketTotal,\n    numberOfItemsInBasket,\n  };\n\n  return (\n    <BasketContext.Provider value={contextValue}>\n      {props.children}\n    </BasketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}